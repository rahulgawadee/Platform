from datetime import datetime
from fastapi import APIRouter, HTTPException, Depends
from app.models.teacher import Course, CourseCreate
from app.database import get_db
from bson import ObjectId

router = APIRouter()

@router.post("/teacher/courses/", response_model=Course)
async def create_course(course: CourseCreate, db=Depends(get_db)):
    # Create a Course instance without _id (MongoDB will generate it)
    course_db = Course(
        **course.dict(),
        created_at=datetime.now(),
        updated_at=datetime.now()
    )

    # Convert to dict with MongoDB-compatible format, exclude _id field
    course_data = course_db.dict(by_alias=True, exclude={"id"})  # Exclude the id field as it's generated by MongoDB
    
    # Insert into database
    result = await db.courses.insert_one(course_data)
    
    # Retrieve and return the created course
    created_course = await db.courses.find_one({"_id": result.inserted_id})
    
    # Return the created course with the generated _id
    return Course(**created_course)

    # Create a Course instance without _id (will be generated by MongoDB)
    course_db = Course(
        **course.dict(),
        created_at=datetime.now(),
        updated_at=datetime.now()
    )
    
    # Convert to dict with MongoDB-compatible format
    course_data = course_db.dict(by_alias=True, exclude={"id"})  # Exclude None id
    
    # Insert into database
    result = await db.courses.insert_one(course_data)
    
    # Retrieve and return the created course
    created_course = await db.courses.find_one({"_id": result.inserted_id})
    return Course(**created_course)

@router.get("/teacher/courses/{course_id}", response_model=Course)
async def get_course(course_id: str, db=Depends(get_db)):
    if not ObjectId.is_valid(course_id):
        raise HTTPException(status_code=400, detail="Invalid course ID")
    
    course = await db.courses.find_one({"_id": ObjectId(course_id)})
    if not course:
        raise HTTPException(status_code=404, detail="Course not found")
    
    return Course(**course)